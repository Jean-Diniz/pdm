version: "3.8"

services:
  spark-master:
    image: ru-ufla-analytics:latest
    ports:
      - "8080:8080"
      - "7077:7077"
      - "4040:4040"
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
      - LOG_LEVEL=INFO
      - LOG_TO_FILE=true
      - LOG_COLORS=false
      - DOCKER_SWARM_MODE=true
      - DOCKER_SERVICE_NAME=ru-analytics
    volumes:
      - misc_data:/app/misc
      - sample_data:/app/datasample
    command: >
      bash -c "
        /opt/spark/sbin/start-master.sh &&
        echo 'Spark Master iniciado no Swarm. Acesse http://localhost:8080 para o Web UI' &&
        tail -f /dev/null
      "
    networks:
      - ru-analytics-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  spark-worker:
    image: ru-ufla-analytics:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2g
      - SPARK_WORKER_CORES=2
      - LOG_LEVEL=INFO
      - LOG_TO_FILE=true
      - LOG_COLORS=false
      - DOCKER_SWARM_MODE=true
    volumes:
      - misc_data:/app/misc
      - sample_data:/app/datasample
    command: >
      bash -c "
        sleep 10 &&
        /opt/spark/sbin/start-worker.sh spark://spark-master:7077 &&
        tail -f /dev/null
      "
    networks:
      - ru-analytics-network
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 2G
    depends_on:
      - spark-master

  analytics:
    image: ru-ufla-analytics:latest
    environment:
      - SPARK_MASTER_URL=spark://spark-master:7077
      - LOG_LEVEL=INFO
      - LOG_TO_FILE=true
      - LOG_COLORS=true
      - DOCKER_SWARM_MODE=true
      - DOCKER_SERVICE_NAME=ru-analytics
    volumes:
      - misc_data:/app/misc
      - sample_data:/app/datasample
    command: >
      bash -c "
        echo 'Aguardando cluster Spark Swarm estar pronto...' &&
        sleep 30 &&
        echo 'Executando an√°lise de dados do RU-UFLA no Swarm' &&
        /app/.venv/bin/python -m src.main test-spark --master-url spark://spark-master:7077 &&
        /app/.venv/bin/python -m src.main analyze --master-url spark://spark-master:7077
      "
    networks:
      - ru-analytics-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    depends_on:
      - spark-master

volumes:
  misc_data:
    driver: local
  sample_data:
    driver: local

networks:
  ru-analytics-network:
    driver: overlay
    attachable: true
